:root {
  --size: min(25vw, 25vh);

  --white: #f7f9fb;
  --blue: #408ab4;
  --blue: #755bea;
  --gray: #283148;
  --color-custom: #0b2447;
}

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  font-family: 'Poppins', sans-serif;
  box-sizing: border-box;
}

body {
  background: #443c68;
}

#menu .menu-container {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 9;
  border-radius: 20px;
  transform: translate(-50%, -50%);
  width: min(95vh, 95vw);
  height: min(95vh, 95vw);
  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.3);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
}

#menu .menu-container,
#menu .menu-secondary {
  background-image: linear-gradient(90deg, #755bea, #635985);
}

#menu .menu-animate {
  opacity: 0;
  z-index: 0;
}

#menu .menu-container .setting-btn {
  position: absolute;
  width: 12%;
  height: 12%;
  top: 2.5%;
  left: 2.5%;
  cursor: pointer;
  border: 2px solid #283148;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  transition: background-color 400ms ease, box-shadow 400ms ease,
    transform 1.1s ease;
}

#menu .menu-container .setting-btn:after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: 2px solid #283148;
  animation: radio_plus 2s ease-out infinite;
}

@keyframes radio_plus {
  0% {
    opacity: 1;
    transform: scale(1.1, 1.1);
  }

  to {
    opacity: 0;
    transform: scale(1.4, 1.4);
  }
}

#menu .menu-container .menu-toggle {
  transform: rotateZ(360deg);
}

#menu .menu-container .setting-btn img {
  width: calc(var(--size) * 0.25);
}

#menu .menu-container h1 {
  margin: 0;
  margin-top: 2rem;
  font-weight: 600;
  letter-spacing: 2px;
  text-align: center;
  color: var(--gray, gray);
  font-size: calc(var(--size) * 0.4);
}

#menu .menu-container [class$='btn']:hover {
  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.6);
}

#menu .menu-container .main-btn {
  cursor: pointer;
  width: calc(var(--size) * 1.3);
  height: calc(var(--size) * 1.3);
  border: calc(var(--size) * 0.06) solid #283148;
  border-radius: 50%;
  transition: background-color 500ms linear, box-shadow 200ms linear;
  display: flex;
  justify-content: center;
  align-items: center;
}

#menu .menu-container .main-btn img {
  max-width: 10rem;
  min-width: 2rem;
  width: 10vw;
  margin-left: 1rem;
}

#menu .menu-container .winner-text {
  text-align: center;
  color: var(--gray);
  font-size: calc(var(--size) * 0.275);
  font-weight: 600;
  letter-spacing: 2px;
}

#menu .menu-secondary {
  position: absolute;
  width: 100%;
  height: 100%;
  transform: translateY(-100%);
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  border-bottom: medium solid #480032;
  transition: transform 1s ease;
}

#menu .menu-toggle {
  transform: translateY(0);
}

#menu .menu-secondary .mode {
  width: 60%;
  height: 20%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  border-radius: 10px;
  cursor: pointer;
  box-shadow: 0 0 0.6rem rgba(0, 0, 0, 0.3);
}

#menu .menu-secondary .mode-1 {
  background-color: var(--gray);
}

#menu .menu-secondary .mode img {
  width: 18%;
}

#menu .menu-secondary .mode p {
  font-size: 2.5rem;
  font-weight: 600;
}

#menu .menu-container .mode img[alt='robot'] {
  width: 20%;
}

.container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: grid;
  grid-template-columns: repeat(3, var(--size));
  grid-template-rows: repeat(3, var(--size));
  align-content: center;
  justify-content: center;
  gap: calc(var(--size) * 0.06);
  perspective: 1000px;
}

.cube {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  animation: animacion1 900ms var(--t) ease-out;
}

@keyframes animacion1 {
  0% {
    transform: rotate3d(0, 0, 0, 0deg);
  }

  to {
    transform: rotate3d(1, 1, 0, 360deg);
  }
}

@keyframes animacion2 {
  0% {
    transform: rotate3d(0, 0, 0, 0deg);
  }

  to {
    transform: rotate3d(1, 1, 0, 180deg);
  }
}

@keyframes animacion3 {
  0%,
  50%,
  80% {
    filter: brightness(0.6);
  }

  30%,
  70%,
  100% {
    filter: brightness(1.5);
  }
}

.cube .face {
  width: 100%;
  height: 100%;
  background: #283148;
  position: absolute;
  color: var(--white, white);
  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2);
}

.cube .xhover:hover,
.cube .ohover:hover {
  background: var(--gray, gray);
}

.cube .ohover:hover::after {
  --radio: calc(var(--size) * 0.85);
  content: '';
  width: 100%;
  height: 100%;
  transform: rotateZ(0);
  background: radial-gradient(
    var(--radio),
    transparent 30%,
    #f7f9fb 31% 39%,
    transparent 40%
  );
}

.cube .odraw {
  --radio: calc(var(--size) * 0.85);
  background-image: radial-gradient(
    var(--radio),
    var(--blue) 30%,
    #f7f9fb 31% 39%,
    var(--blue) 40%
  );
}

.cube .xhover:hover::after,
.cube .xhover:hover::before,
.cube .xdraw:after,
.cube .xdraw:before {
  content: '';
  position: absolute;
  background-color: var(--white, white);
  width: 65%;
  height: 8%;
  border-radius: 3px;
  pointer-events: none;
}

.cube .xdraw:after,
.cube .xhover:hover::after {
  transform: rotateZ(45deg);
}

.cube .xdraw:before,
.cube .xhover:hover::before {
  transform: rotateZ(-45deg);
}

.container .cube .xdraw {
  background: #009fbd;
  transition: background 0s linear;
}

.cube .xdraw,
.cube .odraw {
  animation: animacion3 300ms var(--t2) 1000ms linear;
}

.cube .front,
.cube .back {
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

.cube .front {
  background-color: #99bbff;
  transform: translateZ(0.5rem);
  transition: background 200ms linear;
}

.cube .back {
  transform: translateZ(-0.5rem) rotateY(180deg);
}

.cube .top {
  height: 1rem;
  transform: translateY(-0.5rem) rotateX(90deg);
}

.cube .left {
  width: 1rem;
  transform: translateX(-0.5rem) rotateY(-90deg);
}

.cube .right {
  width: 1rem;
  transform: translateX(calc(var(--size) - 0.5rem)) rotateY(90deg);
}

.cube .bottom {
  height: 1rem;
  transform: translateY(calc(var(--size) - 0.5rem)) rotateX(-90deg);
}
